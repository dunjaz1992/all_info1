'''Логические выражения и операторы Python. NoneType, Условные операторы. Тернарные операторы'''

'''Boolean Type'''
# неизменяемый тип данных, имеет всего 2 значения True/False

# print(bool(0)) #False
# print(bool(-9)) #True
# print(bool('')) #False
# print(bool(' ')) #True
# print(bool(True)) #True
# print(bool('False')) #True

'''Логические выражения - выражения результатом вычисления которых является True/False'''
# 4 == 2 #False

'''Логические операторы'''
# == -> сравнение
# 5 == 5 #True
# 5 == 4 #False
# '5' == 5 #False

# # != -> не равно
# 5 != 4 #True
# 5 != 5 #False

# > -> Больше
# 5 > 4 #True
# 5 > 10 #False

# # < -> меньше 
# 5 < 4 #False
# 5 < 8 #True
# # >= -> больше или равно
# 5 >= 5 #True
# 5 >= 3 #True
# 5 >= 6 #False

# # <= -> меньше или равно
# 5 <= 4 #False
# 5 <= 6 #True
# 5 <= 5 #True

'''===== and or not ====='''
# 1. and -> логичское и
# 2. or -> логическое или
# 3. not -> логическое отрицание

'''
and операторы используется для
or объединения логических выражений
'''

# a = 7
# b = 5

# a == 5 and b == 5 #False (левая часть False правая True -> False)
# a == 7 and b == 5 #True (обе части возвращают True -> True)
# a == 4 and b == 4 #False (обе части возвращают False -> False)

# a == 5 or b == 5 #True (важно, чтобы хоть одна часть выражение были True)
# a == 7 or b == 5 #True ()
# a == 4 or b == 4 #False

'''превращает правду в ложь, а ложь в правду'''
# print (not True) #False
# print (not False) #True

# not a == 7 #False
# not b == 7 #True

'''Операторы идентификации'''
# 1. in -> проверяет наличие элемента
# 2. сравнение 
    # == -> сравнение по значению
    # is -> сравнение по ячейкам памяти

# a = 'hello'
# if 'e' in a:
#     print(True)

'''None Type'''
# неизменяемый тип данных, имеет только одно значение None
# print(bool(None)) #False
# print(bool('None')) #True

'''===== Условные операторы ====='''
# нужны для того, чтобы при разных входных данных код выполнялся по разному

# if условие:
    # тело
    # # тело будет работать, если условие верно

# if условие:
#     тело1
#     # тело (код) будет работать, если условие верно

# else:
#     тело2
#     # тело2 будет работать, если условие1 не верно

# if условие1:
#     тело1
    # тело (код) будет работать, если условие верно


# # elif условие2:
#     тело2
    # тело2 будет работать, если условие1 не верно, а условие2 верно

# # else:
#     тело3
    # тело3 будет работать, если условие1 и условие2 не верны

# в одной конструкции -> только один if
# в одной конструкции -> сколько угодно elif
# в одной конструкции -> только один else

# age = int(input('Введите возраст:'))

# if age >= 18:
#     print('Проходите!')
# else:
#     print('Вход закрыт!!!')

# num = int(input('Введите чисо:'))
# if num % 2 == 0:
#     print('четное')
# else:
#     print('нечетное')

'''===== Тернарные операторы ====='''
# условие в одну строку

'''синтаксис'''
# a = 6
# тело1 if условие else тело2 
# print('hello' if a == 5 else 'Bye')
# res = 'hello' if a == 5 else 'Bye'
# print(res)

'''===== Маржовые операторы ====='''
# позволяет как присвоить, так и вернуть значение в одном выражении
# :=
# num = 7
# print(num:=7)


























